name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  WIN_GRAPHVIZ_URL: "https://gitlab.com/graphviz/graphviz/-/package_files/6164164/download"
  WIN_GRAPHVIZ_EXE: "C:\\Temp\\graphviz-install-2.46.0-win64.exe"
  WIN_GRAPHVIZ_DIR: "C:\\Program Files\\Graphviz"

jobs:

  default:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos]
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install packages
      run: |
        pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt
        pip install .
        pip list

    - name: Test NetworkX
      run: |
        pytest --doctest-modules --durations=10 --pyargs networkx

  pypy:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos]
        python-version: [pypy-3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install packages
      run: |
        pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt
        pip install .
        pip list

    - name: Test NetworkX
      run: |
        pytest --durations=10 --pyargs networkx

  extra:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Before install
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update
          sudo apt-get install graphviz graphviz-dev
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install graphviz pkg-config
        fi

    - name: Install packages
      run: |
        pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt
        pip install -r requirements/extra.txt
        pip install .
        pip list

    - name: Test NetworkX
      run: |
        pytest --doctest-modules --durations=10 --pyargs networkx

  graphviz:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Before install
      run: |
        Invoke-WebRequest -Uri $env:WIN_GRAPHVIZ_URL -OutFile $env:WIN_GRAPHVIZ_EXE
        Start-Process -Wait -FilePath $env:WIN_GRAPHVIZ_EXE -ArgumentList '/S' -PassThru
        echo "$($env:WIN_GRAPHVIZ_DIR)\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install packages
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install -r requirements.txt
        python -m pip install --global-option=build_ext `
          --global-option="-I$($env:WIN_GRAPHVIZ_DIR)\include" `
          --global-option="-L$($env:WIN_GRAPHVIZ_DIR)\lib" `
          pygraphviz==1.7rc2
        python -m pip install .
        python -m pip list

    - name: Test NetworkX
      run: |
        pytest --doctest-modules --durations=10 --pyargs networkx

  prerelease:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos]
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install packages
      run: |
        pip install --upgrade pip wheel setuptools
        pip install --pre -r requirements.txt
        pip install .
        pip list

    - name: Test NetworkX
      run: |
        pytest --doctest-modules --durations=10 --pyargs networkx
